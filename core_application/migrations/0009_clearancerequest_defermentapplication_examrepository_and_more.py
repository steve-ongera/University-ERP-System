# Generated by Django 5.2.4 on 2025-08-06 14:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core_application', '0008_alter_user_user_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClearanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clearance_type', models.CharField(choices=[('library', 'Library Clearance'), ('finance', 'Finance Clearance'), ('accommodation', 'Accommodation Clearance'), ('department', 'Department Clearance'), ('registry', 'Registry Clearance'), ('student_affairs', 'Student Affairs Clearance'), ('graduation', 'Graduation Clearance'), ('transfer', 'Transfer Clearance')], max_length=20)),
                ('reason', models.TextField(help_text='Reason for clearance request')),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('requires_action', 'Requires Action')], default='pending', max_length=20)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('outstanding_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('items_to_return', models.TextField(blank=True, help_text='Books, equipment, etc.')),
                ('additional_requirements', models.TextField(blank=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_clearances', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clearance_requests', to='core_application.student')),
            ],
            options={
                'ordering': ['-request_date'],
            },
        ),
        migrations.CreateModel(
            name='DefermentApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deferment_type', models.CharField(choices=[('medical', 'Medical Reasons'), ('financial', 'Financial Difficulties'), ('family', 'Family Emergency'), ('work', 'Work Commitments'), ('personal', 'Personal Reasons'), ('other', 'Other')], max_length=20)),
                ('reason', models.TextField(help_text='Detailed reason for deferment')),
                ('requested_start_date', models.DateField(help_text='When you want deferment to start')),
                ('requested_duration_months', models.IntegerField(help_text='Duration in months', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(24)])),
                ('supporting_document', models.FileField(blank=True, help_text='Medical certificate, financial documents, etc.', null=True, upload_to='deferment_docs/')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('under_review', 'Under Review')], default='pending', max_length=20)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('admin_remarks', models.TextField(blank=True)),
                ('approved_start_date', models.DateField(blank=True, null=True)),
                ('approved_end_date', models.DateField(blank=True, null=True)),
                ('conditions', models.TextField(blank=True, help_text='Any conditions for the deferment')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_deferments', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deferment_applications', to='core_application.student')),
            ],
            options={
                'ordering': ['-application_date'],
            },
        ),
        migrations.CreateModel(
            name='ExamRepository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('material_type', models.CharField(choices=[('past_paper', 'Past Paper'), ('revision_notes', 'Revision Notes'), ('marking_scheme', 'Marking Scheme'), ('sample_questions', 'Sample Questions'), ('study_guide', 'Study Guide'), ('reference_material', 'Reference Material')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('material_file', models.FileField(upload_to='exam_repository/')),
                ('file_size', models.IntegerField(blank=True, null=True)),
                ('exam_date', models.DateField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=True)),
                ('uploaded_date', models.DateTimeField(auto_now_add=True)),
                ('download_count', models.IntegerField(default=0)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_application.academicyear')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_materials', to='core_application.course')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_materials', to='core_application.programme')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_application.semester')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_date'],
            },
        ),
        migrations.CreateModel(
            name='ExamMaterialDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_date', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_downloads', to='core_application.student')),
                ('exam_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='core_application.examrepository')),
            ],
            options={
                'ordering': ['-downloaded_date'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('message_type', models.CharField(choices=[('personal', 'Personal Message'), ('academic', 'Academic Query'), ('administrative', 'Administrative'), ('announcement', 'Announcement'), ('complaint', 'Complaint')], default='personal', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='message_attachments/')),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_date', models.DateTimeField(blank=True, null=True)),
                ('is_starred', models.BooleanField(default=False)),
                ('is_deleted_by_sender', models.BooleanField(default=False)),
                ('is_deleted_by_recipient', models.BooleanField(default=False)),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='core_application.message')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-sent_date'],
            },
        ),
        migrations.CreateModel(
            name='MessageThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('last_message_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('participants', models.ManyToManyField(related_name='message_threads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_message_date'],
            },
        ),
        migrations.CreateModel(
            name='SpecialExamApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_type', models.CharField(choices=[('missed_exam', 'Missed Exam'), ('failed_exam', 'Failed Exam Retake'), ('sick_exam', 'Sick During Exam'), ('technical_issue', 'Technical Issues'), ('other', 'Other Reasons')], max_length=20)),
                ('reason', models.TextField(help_text='Detailed reason for special exam application')),
                ('original_exam_date', models.DateField(help_text='Date of the original exam')),
                ('supporting_document', models.FileField(blank=True, help_text='Medical certificate, etc.', null=True, upload_to='special_exam_docs/')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('scheduled', 'Exam Scheduled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('admin_remarks', models.TextField(blank=True)),
                ('scheduled_exam_date', models.DateTimeField(blank=True, null=True)),
                ('exam_venue', models.CharField(blank=True, max_length=100)),
                ('exam_duration', models.IntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('application_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fee_paid', models.BooleanField(default=False)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_exam_applications', to='core_application.course')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_special_exams', to=settings.AUTH_USER_MODEL)),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_application.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_exam_applications', to='core_application.student')),
            ],
            options={
                'ordering': ['-application_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('exam_schedule', 'Exam Schedule'), ('assignment_due', 'Assignment Due'), ('grade_posted', 'Grade Posted'), ('message_received', 'Message Received'), ('application_status', 'Application Status Update'), ('clearance_update', 'Clearance Update'), ('general', 'General Notification')], default='general', max_length=20)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_date', models.DateTimeField(blank=True, null=True)),
                ('related_url', models.URLField(blank=True, help_text='Link to related page')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='core_application.student')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
    ]
